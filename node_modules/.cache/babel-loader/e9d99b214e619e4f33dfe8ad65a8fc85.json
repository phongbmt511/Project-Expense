{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\reactjs\\\\hello-world\\\\src\\\\ExpenseChart.js\";\nimport \"./ExpenseChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseChart = props => {\n  const getPercent = (value, maxValue) => {\n    if (maxValue === 0) {\n      return 0;\n    }\n\n    return value / maxValue * 100;\n  };\n\n  const dataPoint = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  let maxValue = 0;\n  props.data.forEach(expenseItem => {\n    const month = expenseItem.date.getMonth(); //Jun->0,Dec->11\n\n    dataPoint[month].value += expenseItem.price;\n\n    if (dataPoint[month].value > maxValue) {\n      maxValue = dataPoint[month].value;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: dataPoint.map(point => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar_inner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-bar_fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar_label\",\n        children: point.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ExpenseChart;\nexport default ExpenseChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/reactjs/hello-world/src/ExpenseChart.js"],"names":["ExpenseChart","props","getPercent","value","maxValue","dataPoint","label","data","forEach","expenseItem","month","date","getMonth","price","map","point"],"mappings":";AAAA,OAAO,oBAAP;;;AACA,MAAMA,YAAY,GAAEC,KAAD,IAAS;AACxB,QAAMC,UAAU,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAkB;AACjC,QAAGA,QAAQ,KAAG,CAAd,EAAgB;AACZ,aAAO,CAAP;AACH;;AACD,WAAQD,KAAK,GAACC,QAAP,GAAiB,GAAxB;AACH,GALD;;AAMA,QAAMC,SAAS,GAAC,CACZ;AAACC,IAAAA,KAAK,EAAG,KAAT;AAAiBH,IAAAA,KAAK,EAAC;AAAvB,GADY,EAEZ;AAACG,IAAAA,KAAK,EAAG,KAAT;AAAiBH,IAAAA,KAAK,EAAC;AAAvB,GAFY,EAGZ;AAACG,IAAAA,KAAK,EAAG,KAAT;AAAiBH,IAAAA,KAAK,EAAC;AAAvB,GAHY,EAIZ;AAACG,IAAAA,KAAK,EAAG,KAAT;AAAiBH,IAAAA,KAAK,EAAC;AAAvB,GAJY,EAKZ;AAACG,IAAAA,KAAK,EAAG,KAAT;AAAiBH,IAAAA,KAAK,EAAC;AAAvB,GALY,EAMZ;AAACG,IAAAA,KAAK,EAAG,KAAT;AAAiBH,IAAAA,KAAK,EAAC;AAAvB,GANY,EAOZ;AAACG,IAAAA,KAAK,EAAG,KAAT;AAAiBH,IAAAA,KAAK,EAAC;AAAvB,GAPY,EAQZ;AAACG,IAAAA,KAAK,EAAG,KAAT;AAAiBH,IAAAA,KAAK,EAAC;AAAvB,GARY,EASZ;AAACG,IAAAA,KAAK,EAAG,KAAT;AAAiBH,IAAAA,KAAK,EAAC;AAAvB,GATY,EAUZ;AAACG,IAAAA,KAAK,EAAG,KAAT;AAAiBH,IAAAA,KAAK,EAAC;AAAvB,GAVY,EAWZ;AAACG,IAAAA,KAAK,EAAG,KAAT;AAAiBH,IAAAA,KAAK,EAAC;AAAvB,GAXY,EAYZ;AAACG,IAAAA,KAAK,EAAG,KAAT;AAAiBH,IAAAA,KAAK,EAAC;AAAvB,GAZY,CAAhB;AAcA,MAAIC,QAAQ,GAAG,CAAf;AACAH,EAAAA,KAAK,CAACM,IAAN,CAAWC,OAAX,CAAoBC,WAAD,IAAe;AAC9B,UAAMC,KAAK,GAAED,WAAW,CAACE,IAAZ,CAAiBC,QAAjB,EAAb,CAD8B,CACW;;AACzCP,IAAAA,SAAS,CAACK,KAAD,CAAT,CAAiBP,KAAjB,IAA0BM,WAAW,CAACI,KAAtC;;AACA,QAAGR,SAAS,CAACK,KAAD,CAAT,CAAiBP,KAAjB,GAAuBC,QAA1B,EAAmC;AAC/BA,MAAAA,QAAQ,GAACC,SAAS,CAACK,KAAD,CAAT,CAAiBP,KAA1B;AACH;AAEJ,GAPD;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cAEQE,SAAS,CAACS,GAAV,CAAcC,KAAK,iBACf;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBAAkCA,KAAK,CAACT;AAAxC;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA/CD;;KAAMN,Y;AAgDN,eAAeA,YAAf","sourcesContent":["import \"./ExpenseChart.css\";\r\nconst ExpenseChart=(props)=>{\r\n    const getPercent = (value,maxValue)=>{\r\n        if(maxValue===0){\r\n            return 0;\r\n        }\r\n        return (value/maxValue)*100;\r\n    }\r\n    const dataPoint=[\r\n        {label : \"Jan\" , value:0},\r\n        {label : \"Feb\" , value:0},\r\n        {label : \"Mar\" , value:0},\r\n        {label : \"Apr\" , value:0},\r\n        {label : \"May\" , value:0},\r\n        {label : \"Jun\" , value:0},\r\n        {label : \"Jul\" , value:0},\r\n        {label : \"Aug\" , value:0},\r\n        {label : \"Sep\" , value:0},\r\n        {label : \"Oct\" , value:0},\r\n        {label : \"Nov\" , value:0},\r\n        {label : \"Dec\" , value:0},\r\n    ];\r\n    let maxValue = 0;\r\n    props.data.forEach((expenseItem)=>{\r\n        const month =expenseItem.date.getMonth();//Jun->0,Dec->11\r\n        dataPoint[month].value += expenseItem.price ;\r\n        if(dataPoint[month].value>maxValue){\r\n            maxValue=dataPoint[month].value;\r\n        }\r\n        \r\n    });\r\n    \r\n    return(\r\n        <div className=\"chart\">\r\n            {\r\n                dataPoint.map(point=> \r\n                    <div className=\"chart-bar\">\r\n                        <div className=\"chart-bar_inner\">\r\n                            <div className=\"chart-bar_fill\"></div>\r\n                        </div>\r\n                        \r\n                        <div className=\"chart-bar_label\">{point.label}</div>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default ExpenseChart;"]},"metadata":{},"sourceType":"module"}