{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\reactjs\\\\hello-world\\\\src\\\\ExpenseChart.js\";\nimport \"./ExpenseChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getPercent = (value, maxValue) => {\n  if (maxValue === 0) {\n    return 0;\n  }\n\n  return value / maxValue * 100;\n};\n\nconst ExpenseChart = props => {\n  const dataPoint = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  let maxValue = 0;\n  props.data.forEach(expenseItem => {\n    const month = expenseItem.date.getMonth(); // Jan -> 0, Dec -> 11\n\n    dataPoint[month].value += expenseItem.price;\n\n    if (dataPoint[month].value > maxValue) {\n      maxValue = dataPoint[month].value;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: dataPoint.map(point => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar__inner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-bar__fill\"\n          /* Style trong JSX nhận vào giá trị là một Object.\r\n          Các thuộc tính CSS cần phải được convert về dạng name của Javascript\r\n          VD: background-color -> backgroundColor\r\n          */\n          ,\n          style: {\n            height: getPercent(point.value, maxValue) + \"%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar__label\",\n        children: point.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, point.label, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpenseChart;\nexport default ExpenseChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/reactjs/hello-world/src/ExpenseChart.js"],"names":["getPercent","value","maxValue","ExpenseChart","props","dataPoint","label","data","forEach","expenseItem","month","date","getMonth","price","map","point","height"],"mappings":";AAAA,OAAO,oBAAP;;;AAEA,MAAMA,UAAU,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtC,MAAIA,QAAQ,KAAK,CAAjB,EAAoB;AAClB,WAAO,CAAP;AACD;;AACD,SAAQD,KAAK,GAAGC,QAAT,GAAqB,GAA5B;AACD,CALD;;AAOA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,SAAS,GAAG,CAChB;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBL,IAAAA,KAAK,EAAE;AAAvB,GADgB,EAEhB;AAAEK,IAAAA,KAAK,EAAE,KAAT;AAAgBL,IAAAA,KAAK,EAAE;AAAvB,GAFgB,EAGhB;AAAEK,IAAAA,KAAK,EAAE,KAAT;AAAgBL,IAAAA,KAAK,EAAE;AAAvB,GAHgB,EAIhB;AAAEK,IAAAA,KAAK,EAAE,KAAT;AAAgBL,IAAAA,KAAK,EAAE;AAAvB,GAJgB,EAKhB;AAAEK,IAAAA,KAAK,EAAE,KAAT;AAAgBL,IAAAA,KAAK,EAAE;AAAvB,GALgB,EAMhB;AAAEK,IAAAA,KAAK,EAAE,KAAT;AAAgBL,IAAAA,KAAK,EAAE;AAAvB,GANgB,EAOhB;AAAEK,IAAAA,KAAK,EAAE,KAAT;AAAgBL,IAAAA,KAAK,EAAE;AAAvB,GAPgB,EAQhB;AAAEK,IAAAA,KAAK,EAAE,KAAT;AAAgBL,IAAAA,KAAK,EAAE;AAAvB,GARgB,EAShB;AAAEK,IAAAA,KAAK,EAAE,KAAT;AAAgBL,IAAAA,KAAK,EAAE;AAAvB,GATgB,EAUhB;AAAEK,IAAAA,KAAK,EAAE,KAAT;AAAgBL,IAAAA,KAAK,EAAE;AAAvB,GAVgB,EAWhB;AAAEK,IAAAA,KAAK,EAAE,KAAT;AAAgBL,IAAAA,KAAK,EAAE;AAAvB,GAXgB,EAYhB;AAAEK,IAAAA,KAAK,EAAE,KAAT;AAAgBL,IAAAA,KAAK,EAAE;AAAvB,GAZgB,CAAlB;AAeA,MAAIC,QAAQ,GAAG,CAAf;AAEAE,EAAAA,KAAK,CAACG,IAAN,CAAWC,OAAX,CAAoBC,WAAD,IAAiB;AAClC,UAAMC,KAAK,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,QAAjB,EAAd,CADkC,CACS;;AAC3CP,IAAAA,SAAS,CAACK,KAAD,CAAT,CAAiBT,KAAjB,IAA0BQ,WAAW,CAACI,KAAtC;;AACA,QAAIR,SAAS,CAACK,KAAD,CAAT,CAAiBT,KAAjB,GAAyBC,QAA7B,EAAuC;AACrCA,MAAAA,QAAQ,GAAGG,SAAS,CAACK,KAAD,CAAT,CAAiBT,KAA5B;AACD;AACF,GAND;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGI,SAAS,CAACS,GAAV,CAAeC,KAAD,iBACb;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC;AACV;AACd;AACA;AACA;AALY;AAME,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAEhB,UAAU,CAACe,KAAK,CAACd,KAAP,EAAcC,QAAd,CAAV,GAAoC;AAA9C;AANT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBAAmCa,KAAK,CAACT;AAAzC;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA,OAAgCS,KAAK,CAACT,KAAtC;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA7CD;;KAAMH,Y;AA+CN,eAAeA,YAAf","sourcesContent":["import \"./ExpenseChart.css\";\r\n\r\nconst getPercent = (value, maxValue) => {\r\n  if (maxValue === 0) {\r\n    return 0;\r\n  }\r\n  return (value / maxValue) * 100;\r\n};\r\n\r\nconst ExpenseChart = (props) => {\r\n  const dataPoint = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  let maxValue = 0;\r\n\r\n  props.data.forEach((expenseItem) => {\r\n    const month = expenseItem.date.getMonth(); // Jan -> 0, Dec -> 11\r\n    dataPoint[month].value += expenseItem.price;\r\n    if (dataPoint[month].value > maxValue) {\r\n      maxValue = dataPoint[month].value;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {dataPoint.map((point) => (\r\n        <div className=\"chart-bar\" key={point.label}>\r\n          <div className=\"chart-bar__inner\">\r\n            <div\r\n              className=\"chart-bar__fill\"\r\n              /* Style trong JSX nhận vào giá trị là một Object.\r\n              Các thuộc tính CSS cần phải được convert về dạng name của Javascript\r\n              VD: background-color -> backgroundColor\r\n              */\r\n              style={{ height: getPercent(point.value, maxValue) + \"%\" }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"chart-bar__label\">{point.label}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseChart;\r\n"]},"metadata":{},"sourceType":"module"}